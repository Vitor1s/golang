package main

import "fmt"

/*
üéØ ATIVIDADE 3: ESTRUTURAS DE CONTROLE

üìù OBJETIVOS:
- Praticar if/else em diferentes situa√ß√µes
- Dominar loops for em suas varia√ß√µes
- Combinar condicionais com loops
- Trabalhar com operadores de compara√ß√£o

‚úÖ TAREFAS:
*/

func controle() {
	fmt.Println("=== ATIVIDADE 3: ESTRUTURAS DE CONTROLE ===")

	// TODO 1: Classificador de idade
	// - crie uma vari√°vel idade := 17
	// - use if/else para classificar:
	//   * menor que 13: "Crian√ßa"
	//   * 13 a 17: "Adolescente"
	//   * 18 a 59: "Adulto"
	//   * 60 ou mais: "Idoso"

	// TODO 2: Verificador de nota
	// - crie nota := 8.5
	// - use if/else if para mostrar conceito:
	//   * 9.0-10.0: "Excelente"
	//   * 7.0-8.9: "Bom"
	//   * 5.0-6.9: "Regular"
	//   * 0.0-4.9: "Insuficiente"

	// TODO 3: Loop b√°sico - conte de 1 a 10
	// Use for com: for i := 1; i <= 10; i++

	// TODO 4: Loop while - conte de 50 at√© 45 (regressivo)
	// Use: contador := 50; for contador >= 45 { ... }

	// TODO 5: Tabuada personalizada
	// - pe√ßa um n√∫mero (ex: numero := 7)
	// - imprima a tabuada desse n√∫mero (1x7=7, 2x7=14, etc.)

	// TODO 6: N√∫meros pares e √≠mpares
	// - use for de 1 a 20
	// - dentro do loop, use if para verificar se √© par ou √≠mpar
	// - imprima "X √© par" ou "X √© √≠mpar"
	// Dica: use i%2 == 0 para verificar se √© par

	// TODO 7: Contador de positivos, negativos e zeros
	// - crie um slice: numeros := []int{-3, 0, 5, -1, 8, 0, -7, 2}
	// - use for range para percorrer
	// - conte quantos s√£o positivos, negativos e zeros
	// - imprima o resultado

	// TODO 8: Encontrar o maior n√∫mero
	// - use o mesmo slice do TODO 7
	// - encontre o maior n√∫mero usando loop
	// - dica: comece com maior := numeros[0]

	// TODO 9: Simulador de caixa eletr√¥nico
	// - saldo := 1000.0
	// - operacoes := []string{"saque", "deposito", "saque", "deposito"}
	// - valores := []float64{200.0, 150.0, 50.0, 300.0}
	// - use for range para processar cada opera√ß√£o
	// - se saque: diminui do saldo (mas s√≥ se tiver saldo suficiente)
	// - se dep√≥sito: aumenta o saldo
	// - imprima o saldo ap√≥s cada opera√ß√£o

	// TODO 10: Detector de sequ√™ncia
	// - numeros := []int{1, 2, 3, 4, 5, 10, 11, 12}
	// - encontre sequ√™ncias de n√∫meros consecutivos
	// - imprima algo como: "Sequ√™ncia encontrada: 1,2,3,4,5" e "Sequ√™ncia encontrada: 10,11,12"

	// ========================================
	// ESCREVA SEU C√ìDIGO AQUI EMBAIXO:
	// ========================================

}

/*
üéì DICAS IMPORTANTES:

1. OPERADORES DE COMPARA√á√ÉO:
   == (igual), != (diferente), < (menor), > (maior), <= (menor igual), >= (maior igual)

2. TIPOS DE FOR:
   for i := 0; i < 10; i++ { }     // C-style loop
   for condicao { }                 // while loop
   for index, valor := range slice { }  // range loop

3. IF M√öLTIPLOS:
   if condicao1 {
   } else if condicao2 {
   } else {
   }

4. RANGE:
   - for i, v := range slice: i=√≠ndice, v=valor
   - for _, v := range slice: s√≥ o valor (ignora √≠ndice)
   - for i := range slice: s√≥ o √≠ndice

üí° EXEMPLO DE SA√çDA ESPERADA:
=== ATIVIDADE 3: ESTRUTURAS DE CONTROLE ===
Idade 17: Adolescente
Nota 8.5: Bom
Contagem: 1 2 3 4 5 6 7 8 9 10
Regressivo: 50 49 48 47 46 45
Tabuada do 7: 1x7=7, 2x7=14, 3x7=21...
15 √© √≠mpar, 16 √© par, 17 √© √≠mpar...
Positivos: 3, Negativos: 3, Zeros: 2
Maior n√∫mero: 8
Saldo ap√≥s saque: 800.00
Sequ√™ncia encontrada: 1,2,3,4,5
*/
